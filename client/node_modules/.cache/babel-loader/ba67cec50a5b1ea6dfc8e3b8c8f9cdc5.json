{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/chart_constructor.js\";\nimport React, { Component } from 'react';\nimport { XYPlot, LineSeries, VerticalBarSeries, MarkSeries, RadialChart, RadarChart } from 'react-vis';\nimport { format } from 'd3-format';\nimport './graph_styling.css'; // http://uber.github.io/react-vis/documentation\n\nclass Chart_Constructor extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const data1 = this.props.data1;\n    const data2 = this.props.data2;\n    const data3 = this.props.data3;\n    const domain = [0, 100];\n    const wideFormat = format('.3r');\n    console.log(data2);\n    return React.createElement(\"div\", {\n      className: \"my-graphs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(RadarChart, {\n      data: data3,\n      startingAngle: Math.PI / 7,\n      domains: [{\n        name: 'pop',\n        domain: domain\n      }, {\n        name: 'rap',\n        domain: domain\n      }, {\n        name: 'country',\n        domain: domain\n      }, {\n        name: 'rock',\n        domain: domain\n      }, {\n        name: 'metal',\n        domain: domain\n      }, {\n        name: 'alternative',\n        domain: domain\n      }],\n      width: 400,\n      height: 300,\n      style: {\n        labels: {\n          fontSize: 13\n        },\n        polygons: {\n          fillOpacity: 0.1,\n          strokeOpacity: 1,\n          strokeWidth: 0.5\n        }\n      } // onSeriesMouseOver={(data) => {\n      //   this.setState({hoveredCell: data.event[0]});\n      // }}\n      // onSeriesMouseOut={() => this.setState({hoveredCell: false})}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(XYPlot, {\n      xType: \"ordinal\",\n      height: 300,\n      width: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(VerticalBarSeries, {\n      color: 'orange',\n      data: data2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(RadialChart // data={[ {angle: 1, radius: 10}, \n    //     {angle: 2, label: 'Super Custom label', subLabel: 'With annotation', radius: 20},\n    //     {angle: 5, radius: 5, label: 'Alt Label'}, {angle: 3, radius: 14}, \n    //     {angle: 5, radius: 12, subLabel: 'Sub Label only', className: 'custom-class'} ]}\n    , {\n      data: data1,\n      width: 300,\n      height: 300,\n      animation: {\n        damping: 9,\n        stiffness: 300\n      },\n      showLabels: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart_Constructor;","map":{"version":3,"sources":["/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/chart_constructor.js"],"names":["React","Component","XYPlot","LineSeries","VerticalBarSeries","MarkSeries","RadialChart","RadarChart","format","Chart_Constructor","constructor","props","render","data1","data2","data3","domain","wideFormat","console","log","Math","PI","name","labels","fontSize","polygons","fillOpacity","strokeOpacity","strokeWidth","damping","stiffness"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,EAAgBC,UAAhB,EAA4BC,iBAA5B,EAA8CC,UAA9C,EAA0DC,WAA1D,EAAuEC,UAAvE,QAAwF,WAAxF;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,OAAO,qBAAP,C,CACA;;AAEA,MAAMC,iBAAN,SAAgCR,SAAhC,CAA0C;AACtCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEH;;AACHC,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAzB;AACA,UAAMC,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAzB;AACA,UAAMC,KAAK,GAAG,KAAKJ,KAAL,CAAWI,KAAzB;AACA,UAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,GAAJ,CAAf;AACA,UAAMC,UAAU,GAAGT,MAAM,CAAC,KAAD,CAAzB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACF,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,UAAD;AACE,MAAA,IAAI,EAAEC,KADR;AAEE,MAAA,aAAa,EAAEK,IAAI,CAACC,EAAL,GAAU,CAF3B;AAGE,MAAA,OAAO,EAAE,CACP;AAACC,QAAAA,IAAI,EAAE,KAAP;AAAcN,QAAAA,MAAM,EAAEA;AAAtB,OADO,EAEP;AAACM,QAAAA,IAAI,EAAE,KAAP;AAAcN,QAAAA,MAAM,EAAEA;AAAtB,OAFO,EAGP;AAACM,QAAAA,IAAI,EAAE,SAAP;AAAkBN,QAAAA,MAAM,EAAEA;AAA1B,OAHO,EAIP;AAACM,QAAAA,IAAI,EAAE,MAAP;AAAeN,QAAAA,MAAM,EAAEA;AAAvB,OAJO,EAKP;AAACM,QAAAA,IAAI,EAAE,OAAP;AAAgBN,QAAAA,MAAM,EAAEA;AAAxB,OALO,EAMP;AAACM,QAAAA,IAAI,EAAE,aAAP;AAAsBN,QAAAA,MAAM,EAAEA;AAA9B,OANO,CAHX;AAWE,MAAA,KAAK,EAAE,GAXT;AAYE,MAAA,MAAM,EAAE,GAZV;AAaE,MAAA,KAAK,EAAE;AACLO,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAE;AADJ,SADH;AAILC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,WAAW,EAAE,GADL;AAERC,UAAAA,aAAa,EAAE,CAFP;AAGRC,UAAAA,WAAW,EAAE;AAHL;AAJL,OAbT,CAuBE;AACA;AACA;AACA;AA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAqCE,oBAAC,MAAD;AAAS,MAAA,KAAK,EAAC,SAAf;AAAyB,MAAA,MAAM,EAAE,GAAjC;AAAsC,MAAA,KAAK,EAAE,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAE,QAA1B;AACA,MAAA,IAAI,EAAEd,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CArCF,EA6CE,oBAAC,WAAD,CACI;AACA;AACA;AACA;AAJJ;AAKI,MAAA,IAAI,EAAED,KALV;AAMI,MAAA,KAAK,EAAE,GANX;AAOI,MAAA,MAAM,EAAE,GAPZ;AAQI,MAAA,SAAS,EAAE;AAACgB,QAAAA,OAAO,EAAE,CAAV;AAAaC,QAAAA,SAAS,EAAE;AAAxB,OARf;AAUI,MAAA,UAAU,EAAE,IAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7CF,CADF;AA2DD;;AAvEuC;;AA0E1C,eAAerB,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport {XYPlot, LineSeries, VerticalBarSeries,MarkSeries, RadialChart, RadarChart} from 'react-vis';\nimport {format} from 'd3-format';\nimport './graph_styling.css'\n// http://uber.github.io/react-vis/documentation\n\nclass Chart_Constructor extends Component {\n    constructor(props) {\n        super(props)\n\n    }\n  render() {\n      const data1 = this.props.data1\n      const data2 = this.props.data2\n      const data3 = this.props.data3\n      const domain = [0, 100];\n      const wideFormat = format('.3r');\n      console.log(data2)\n    return (\n      <div className='my-graphs'>\n\n      <RadarChart\n        data={data3}\n        startingAngle={Math.PI / 7}\n        domains={[\n          {name: 'pop', domain: domain,},\n          {name: 'rap', domain: domain,},\n          {name: 'country', domain: domain,},\n          {name: 'rock', domain: domain,},\n          {name: 'metal', domain: domain,},\n          {name: 'alternative', domain: domain,}\n        ]}\n        width={400}\n        height={300}\n        style={{\n          labels: {\n            fontSize: 13\n          },\n          polygons: {\n            fillOpacity: 0.1,\n            strokeOpacity: 1,\n            strokeWidth: 0.5\n          }\n        }}\n        // onSeriesMouseOver={(data) => {\n        //   this.setState({hoveredCell: data.event[0]});\n        // }}\n        // onSeriesMouseOut={() => this.setState({hoveredCell: false})}\n      >\n        {/* {hoveredCell && (\n          <Hint value={{x: 0, y: 0}}>\n            <div style={tipStyle}>{hoveredCell.name}</div>\n          </Hint>\n        )} */}\n      </RadarChart>\n\n        <XYPlot  xType=\"ordinal\" height={300} width={300}>\n            <VerticalBarSeries color={'orange'}\n            data={data2}/>\n         </XYPlot>\n         \n        {/* <XYPlot height={300} width={300}>\n            <LineSeries data={data2} />\n        </XYPlot> */}\n        <RadialChart\n            // data={[ {angle: 1, radius: 10}, \n            //     {angle: 2, label: 'Super Custom label', subLabel: 'With annotation', radius: 20},\n            //     {angle: 5, radius: 5, label: 'Alt Label'}, {angle: 3, radius: 14}, \n            //     {angle: 5, radius: 12, subLabel: 'Sub Label only', className: 'custom-class'} ]}\n            data={data1}\n            width={300}\n            height={300}\n            animation={{damping: 9, stiffness: 300}}\n\n            showLabels={true}/> \n      </div>\n    );\n  }\n}\n\nexport default Chart_Constructor;"]},"metadata":{},"sourceType":"module"}