{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/spotify_previewer.js\";\nimport React, { Component } from 'react';\nimport * as $ from \"jquery\";\nimport Chart_Constructor from './chart_constructor';\nimport { Redirect } from 'react-router-dom';\nimport spotifyServiceWorker from './spotify-service-worker';\nimport './graph_styling.css'; // https://medium.com/@jonnykalambay/now-playing-using-spotifys-awesome-api-with-react-7db8173a7b13?\n\nclass Spotify_Previewer extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const default_data = [{\n      'x': 4,\n      'y': 2\n    }];\n\n    if (window.performance) {\n      if (performance.navigation.type == 1) {\n        window.location.replace('http://localhost:5000/login');\n      }\n    }\n\n    this.state = {\n      access_token: '',\n      loggedIn: params.access_token ? true : false,\n      top_artists: default_data,\n      genre_weights: [{\n        'pop': 0,\n        'rap': 0,\n        'country': 0,\n        'rock': 0,\n        'metal': 0,\n        'alternative': 0\n      }],\n      top_5_artists: [{\n        'x': 'A',\n        'y': 2\n      }],\n      top_artists_popularity: default_data,\n      popularity_list: default_data,\n      average_artist_rank: default_data,\n      genre_quantity: default_data,\n      genre_intersection: default_data,\n      radialRankings: [{\n        'angle': 360\n      }]\n    };\n\n    if (params.access_token) {\n      this.setState({\n        access_token: params.access_token\n      });\n    }\n  }\n\n  radarChartGenreWeighting(genres) {\n    var categories = ['pop', 'rap', 'country', 'rock', 'metal', 'alternative'];\n    const weights = {};\n    categories.forEach(e => {\n      var count = 0;\n      genres.forEach(x => {\n        if (x.includes(e)) {\n          count++;\n        }\n      });\n      weights[e] = count;\n    });\n    return [weights];\n  }\n\n  piChartRankings(ranks) {\n    let keys = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90];\n    var values = [];\n    keys.forEach(e => {\n      var count = 0;\n      ranks.forEach(element => {\n        if (e === Math.trunc((element - 0.5) / 10) * 10) {\n          count++;\n        }\n      });\n      values.push(count);\n    }); // Radial Chart \n\n    var formattedResult = [];\n\n    for (var i = 0; i <= values.length - 1; i++) {\n      if (values[i] !== 0) {\n        formattedResult.push({\n          'angle': values[i],\n          'label': 10 * i,\n          'radius': i / 2 + 5\n        });\n      }\n    } // Bar Series\n    // var formattedResult = [];\n    // for (var i = 0; i <= values.length -1; i++) {\n    //     if(values[i] !== 0) {\n    //         formattedResult.push({'x': i, 'y': values[i],})\n    //     }\n    // }\n\n\n    return formattedResult;\n  }\n\n  analyseTermData(data) {\n    const test_array = [\"pop\", \"rap\", \"ssdsdsd\"];\n    const items = data.items;\n    const top_artists_names = items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.name), []);\n    const top_artists_popularity = items.reduce((accumulator, currentValue) => accumulator.concat({\n      'artist': currentValue.name,\n      'rank': currentValue.popularity\n    }), []);\n    const popularity_list = items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.popularity), []);\n    const average_artist_rank = items.reduce((accumulator, currentValue) => accumulator + currentValue.popularity, 0) / 50;\n    const genre_quantity = items.reduce((accumulator, currentValue) => accumulator.concat([currentValue.genres]), []).flat();\n    const genre_intersection = test_array.filter(element => genre_quantity.includes(element));\n    const radialRankings = this.piChartRankings(popularity_list);\n    const top_5_artists = items.slice(0, 5).reduce((accumulator, currentValue) => accumulator.concat({\n      'x': currentValue.name,\n      'y': currentValue.popularity\n    }), []);\n    const genre_weights = this.radarChartGenreWeighting(genre_quantity);\n    console.log(genre_quantity);\n    this.setState({\n      top_artists_names,\n      top_5_artists,\n      genre_weights,\n      top_artists_popularity,\n      popularity_list,\n      average_artist_rank,\n      genre_quantity,\n      genre_intersection,\n      radialRankings\n    });\n  }\n\n  getTopArtists(token) {\n    $.ajax({\n      url: 'https://api.spotify.com/v1/me/top/artists?time_range=short_term&limit=50&offset=0',\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        this.analyseTermData(data);\n      }\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.loggedIn) {\n      this.getTopArtists(this.getHashParams().access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"How Similar Are Our Music Tastes?\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"This is super important...\"), !this.state.loggedIn ? React.createElement(\"div\", {\n      className: \"spotify-button-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:5000/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"spotify-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"'Do Something with Spotify'\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Chart_Constructor, {\n      data1: this.state.radialRankings,\n      data2: this.state.top_5_artists,\n      data3: this.state.genre_weights,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Spotify_Previewer;","map":{"version":3,"sources":["/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/spotify_previewer.js"],"names":["React","Component","$","Chart_Constructor","Redirect","spotifyServiceWorker","Spotify_Previewer","constructor","params","getHashParams","default_data","window","performance","navigation","type","location","replace","state","access_token","loggedIn","top_artists","genre_weights","top_5_artists","top_artists_popularity","popularity_list","average_artist_rank","genre_quantity","genre_intersection","radialRankings","setState","radarChartGenreWeighting","genres","categories","weights","forEach","e","count","x","includes","piChartRankings","ranks","keys","values","element","Math","trunc","push","formattedResult","i","length","analyseTermData","data","test_array","items","top_artists_names","reduce","accumulator","currentValue","concat","name","popularity","flat","filter","slice","console","log","getTopArtists","token","ajax","url","beforeSend","xhr","setRequestHeader","success","componentDidMount","hashParams","r","q","hash","substring","exec","decodeURIComponent","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as $ from \"jquery\";\nimport Chart_Constructor from './chart_constructor';\nimport { Redirect } from 'react-router-dom'\nimport spotifyServiceWorker from './spotify-service-worker';\nimport './graph_styling.css';\n// https://medium.com/@jonnykalambay/now-playing-using-spotifys-awesome-api-with-react-7db8173a7b13?\n\nclass Spotify_Previewer extends Component {\n    constructor(){\n        super();\n        const params = this.getHashParams()\n        const default_data = [{'x': 4, 'y': 2}];\n        if (window.performance) {\n            if (performance.navigation.type == 1) {\n                window.location.replace('http://localhost:5000/login');\n            }\n          }\n        this.state = {\n            access_token: '',\n            loggedIn: params.access_token ? true : false,\n            top_artists: default_data,\n            genre_weights: \n                [{'pop': 0,'rap': 0,'country': 0,'rock': 0,'metal': 0,'alternative': 0}],\n            top_5_artists: [{'x': 'A', 'y': 2}],\n            top_artists_popularity: default_data,\n            popularity_list: default_data, \n            average_artist_rank: default_data, \n            genre_quantity: default_data, \n            genre_intersection: default_data,\n            radialRankings: [{'angle': 360}], \n        }\n        if (params.access_token) {\n            this.setState(({\n                access_token: params.access_token\n            }));\n        }\n    }\n    radarChartGenreWeighting (genres) {\n        var categories = ['pop', 'rap', 'country', 'rock', 'metal', 'alternative',];\n        const weights = {};\n        categories.forEach(e => {\n            var count = 0;\n            genres.forEach(x => {\n                if(x.includes(e)) {\n                    count ++;\n                }\n            });\n            weights[e] = count;\n        });\n        return [weights];\n    }\n    piChartRankings(ranks) {\n        let keys = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90];\n        var values =[]\n        keys.forEach(e => {\n            var count = 0;\n            ranks.forEach(element => {\n                if(e === (Math.trunc((element-0.5)/10))*10) {\n                    count ++;\n                }\n            })\n            values.push(count)\n        })\n        // Radial Chart \n        var formattedResult = [];\n        for (var i = 0; i <= values.length -1; i++) {\n            if(values[i] !== 0) {\n                formattedResult.push({'angle': values[i], 'label': 10*i, 'radius': i/2+5 })\n            }\n        }\n        // Bar Series\n        // var formattedResult = [];\n        // for (var i = 0; i <= values.length -1; i++) {\n        //     if(values[i] !== 0) {\n        //         formattedResult.push({'x': i, 'y': values[i],})\n        //     }\n        // }\n        return formattedResult;\n    }\n    analyseTermData(data) {\n        const test_array = [\"pop\", \"rap\", \"ssdsdsd\"];\n        const items = data.items;\n        const top_artists_names = items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.name), []);\n        const top_artists_popularity = items.reduce((accumulator, currentValue) => accumulator.concat({'artist': currentValue.name, 'rank': currentValue.popularity}), []);\n        const popularity_list = items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.popularity), []);\n        const average_artist_rank = items.reduce((accumulator, currentValue) => accumulator + currentValue.popularity, 0)/50;\n        const genre_quantity = items.reduce((accumulator, currentValue) => accumulator.concat([currentValue.genres]), []).flat(); \n        const genre_intersection = test_array.filter(element => genre_quantity.includes(element));\n        const radialRankings = this.piChartRankings(popularity_list)\n        const top_5_artists = (items.slice(0,5)).reduce((accumulator, currentValue) => accumulator.concat({'x': currentValue.name, 'y': currentValue.popularity}), []);\n        const genre_weights = this.radarChartGenreWeighting(genre_quantity);\n        console.log(genre_quantity)\n        this.setState( { \n            top_artists_names,\n            top_5_artists,\n            genre_weights,\n            top_artists_popularity,\n            popularity_list, \n            average_artist_rank, \n            genre_quantity, \n            genre_intersection,\n            radialRankings \n        });     \n    }\n    getTopArtists(token) {\n            $.ajax({\n                url: 'https://api.spotify.com/v1/me/top/artists?time_range=short_term&limit=50&offset=0',\n                type: \"GET\",\n                beforeSend: (xhr) => {\n                xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n                },\n                success: (data) => {\n                    this.analyseTermData(data)\n                }\n            });\n    }\n    componentDidMount(){\n        if(this.state.loggedIn) {\n            this.getTopArtists(this.getHashParams().access_token);\n        } \n    }\n   \n    getHashParams() {\n        var hashParams = {};\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        while ( e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        }\n        return hashParams;\n    }\n\n    render() {\n            return (\n                <div>\n                    <h1>How Similar Are Our Music Tastes?</h1>\n                    <h3>This is super important...</h3>\n                {!this.state.loggedIn ? (\n                <div className='spotify-button-div'>\n                    <a href='http://localhost:5000/login'>\n                        <button className='spotify-button'>'Do Something with Spotify'</button>\n                    </a>\n                </div>\n                ) : (\n                <div>\n                    <Chart_Constructor \n                        data1={this.state.radialRankings} \n                        data2={this.state.top_5_artists}\n                        data3={this.state.genre_weights}/>\n                </div>\n                )\n                } \n                \n                \n                </div>\n            );\n    }\n}\n\nexport default Spotify_Previewer;"]},"metadata":{},"sourceType":"module"}