{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/spotify_previewer.js\";\nimport React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport * as $ from \"jquery\";\nimport { URL, URLSearchParams } from 'url'; // https://medium.com/@jonnykalambay/now-playing-using-spotifys-awesome-api-with-react-7db8173a7b13?\n\nconst spotifyWebApi = new Spotify();\n\nclass Spotify_Previewer extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      access_token: '',\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        image: ''\n      }\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n      this.setState({\n        access_token: params.access_token\n      });\n    }\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        name: response.item.name,\n        image: response.item.album.images[0].url\n      });\n      console.log(this.state.name);\n    });\n  }\n\n  getTopArtists() {\n    // spotifyWebApi.getMyTopArtists ()\n    // .then((response) => {\n    //     console.log(response);\n    // }) \n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/top/artists\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.getHashParams().access_token);\n      },\n      success: data => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.loggedIn) {\n      this.getNowPlaying();\n    } // this.forceUpdate();\n\n\n    this.getTopArtists();\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"How Similar Are Our Music Tastes?\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"This is super important in order to ensure..\"), !this.state.loggedIn ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:5000/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"'Do Something with Spotify'\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.name), React.createElement(\"img\", {\n      src: this.state.image,\n      alt: \"Album Image\",\n      height: \"auto\",\n      width: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Spotify_Previewer;","map":{"version":3,"sources":["/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/spotify_previewer.js"],"names":["React","Component","Spotify","$","URL","URLSearchParams","spotifyWebApi","Spotify_Previewer","constructor","params","getHashParams","state","access_token","loggedIn","nowPlaying","name","image","setAccessToken","setState","getNowPlaying","getMyCurrentPlaybackState","then","response","item","album","images","url","console","log","getTopArtists","ajax","type","beforeSend","xhr","setRequestHeader","success","data","is_playing","progress_ms","componentDidMount","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport * as $ from \"jquery\";\nimport { URL, URLSearchParams } from 'url';\n// https://medium.com/@jonnykalambay/now-playing-using-spotifys-awesome-api-with-react-7db8173a7b13?\n\nconst spotifyWebApi = new Spotify();\n\nclass Spotify_Previewer extends Component {\n    constructor(){\n        super();\n        const params = this.getHashParams()\n        this.state = {\n            access_token: '',\n            loggedIn: params.access_token ? true : false,\n            nowPlaying: {\n                name: 'Not Checked',\n                image: ''\n            },\n        }\n        if (params.access_token) {\n            spotifyWebApi.setAccessToken(params.access_token);\n            this.setState(({\n                    access_token: params.access_token\n            }));\n        }\n    }\n    getNowPlaying() {\n        spotifyWebApi.getMyCurrentPlaybackState ()\n        .then((response) => {\n            this.setState({\n                name: response.item.name,\n                image: response.item.album.images[0].url\n            })\n            console.log(this.state.name);\n        }) \n    }\n    getTopArtists() {\n        // spotifyWebApi.getMyTopArtists ()\n        // .then((response) => {\n        //     console.log(response);\n        // }) \n        $.ajax({\n            url: \"https://api.spotify.com/v1/me/top/artists\",\n            type: \"GET\",\n            beforeSend: (xhr) => {\n              xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.getHashParams().access_token);\n            },\n            success: (data) => {\n              this.setState({\n                item: data.item,\n                is_playing: data.is_playing,\n                progress_ms: data.progress_ms,\n              });\n            }\n          });\n    }\n    componentDidMount(){\n        if(this.state.loggedIn) {\n            this.getNowPlaying();\n        }\n        // this.forceUpdate();\n        this.getTopArtists();\n    }\n\n    getHashParams() {\n        var hashParams = {};\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        while ( e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        }\n        return hashParams;\n    }\n\n    render() {\n            return (\n                <div>\n                    <h1>How Similar Are Our Music Tastes?</h1>\n                    <h3>This is super important in order to ensure..</h3>\n                {!this.state.loggedIn ? (\n                <div>\n                    <a href='http://localhost:5000/login'>\n                        <button>'Do Something with Spotify'</button>\n                    </a>\n                </div>\n                ) : (\n                <div>\n                    <h3>{this.state.name}</h3>\n                    <img src={this.state.image} alt='Album Image' height='auto' width='auto'/>\n                </div>\n                )\n                } \n                </div>\n            );\n    }\n}\n\nexport default Spotify_Previewer;"]},"metadata":{},"sourceType":"module"}