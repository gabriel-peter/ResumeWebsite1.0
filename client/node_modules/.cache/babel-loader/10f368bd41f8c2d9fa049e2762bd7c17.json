{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/spotify_previewer.js\";\nimport React, { Component } from 'react';\nimport * as $ from \"jquery\";\nimport Chart_Constructor from './chart_constructor';\nimport spotifyServiceWorker from './spotify-service-worker'; // https://medium.com/@jonnykalambay/now-playing-using-spotifys-awesome-api-with-react-7db8173a7b13?\n\nclass Spotify_Previewer extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const default_data = [{\n      'x': 4,\n      'y': 2\n    }];\n    this.state = {\n      access_token: '',\n      loggedIn: params.access_token ? true : false,\n      long_term: {\n        top_artists: default_data,\n        top_artists_popularity: default_data,\n        popularity_list: default_data,\n        average_artist_rank: default_data,\n        genre_quantity: default_data,\n        genre_intersection: default_data,\n        radialRankings: [{\n          'angle': 360\n        }]\n      }\n    };\n\n    if (params.access_token) {\n      this.setState({\n        access_token: params.access_token\n      });\n    }\n  }\n\n  top_5_artists(top_artists) {\n    return top_artists.slice(0, 4).reduce((accumulator, currentValue) => accumulator.concat({\n      'x': currentValue.name,\n      'y': currentValue.popularity\n    }), []);\n  }\n\n  piChartRankings(ranks) {\n    let keys = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90];\n    var values = [];\n    keys.forEach(e => {\n      var count = 0;\n      ranks.forEach(element => {\n        if (e === Math.trunc((element - 0.5) / 10) * 10) {\n          count++;\n        }\n      });\n      values.push(count);\n    }); // Radial Chart \n\n    var formattedResult = [];\n\n    for (var i = 0; i <= values.length - 1; i++) {\n      if (values[i] !== 0) {\n        formattedResult.push({\n          'angle': values[i],\n          'label': 10 * i,\n          'radius': i / 2 + 5\n        });\n      }\n    } // Bar Series\n    // var formattedResult = [];\n    // for (var i = 0; i <= values.length -1; i++) {\n    //     if(values[i] !== 0) {\n    //         formattedResult.push({'x': i, 'y': values[i],})\n    //     }\n    // }\n\n\n    return formattedResult;\n  }\n\n  analyseTermData(data) {\n    const test_array = [\"pop\", \"rap\", \"ssdsdsd\"];\n    const items = data.items;\n    let top_artists_names = items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.name), []);\n    let top_artists_popularity = items.reduce((accumulator, currentValue) => accumulator.concat({\n      'artist': currentValue.name,\n      'rank': currentValue.popularity\n    }), []);\n    let popularity_list = items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.popularity), []);\n    let average_artist_rank = items.reduce((accumulator, currentValue) => accumulator + currentValue.popularity, 0) / 50;\n    let genre_quantity = items.reduce((accumulator, currentValue) => accumulator.concat([currentValue.genres]), []).flat();\n    const genre_intersection = test_array.filter(element => genre_quantity.includes(element));\n    const radialRankings = this.piChartRankings(popularity_list);\n    const top_5_artists = this.top_5_artists(items);\n    const long_term_data = {\n      top_artists_names,\n      top_5_artists,\n      top_artists_popularity,\n      popularity_list,\n      average_artist_rank,\n      genre_quantity,\n      genre_intersection,\n      radialRankings\n    };\n    return long_term_data;\n  }\n\n  getTopArtists(token) {\n    $.ajax({\n      url: 'https://api.spotify.com/v1/me/top/artists?time_range=long_term&limit=50&offset=0',\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        this.setState({\n          long_term: this.analyseTermData(data)\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.loggedIn) {\n      this.getTopArtists(this.getHashParams().access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"How Similar Are Our Music Tastes?\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"This is super important in order to ensure..\"), !this.state.loggedIn ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:5000/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"'Do Something with Spotify'\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Chart_Constructor, {\n      data: this.state.long_term.radialRankings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Spotify_Previewer;","map":{"version":3,"sources":["/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/spotify_previewer.js"],"names":["React","Component","$","Chart_Constructor","spotifyServiceWorker","Spotify_Previewer","constructor","params","getHashParams","default_data","state","access_token","loggedIn","long_term","top_artists","top_artists_popularity","popularity_list","average_artist_rank","genre_quantity","genre_intersection","radialRankings","setState","top_5_artists","slice","reduce","accumulator","currentValue","concat","name","popularity","piChartRankings","ranks","keys","values","forEach","e","count","element","Math","trunc","push","formattedResult","i","length","analyseTermData","data","test_array","items","top_artists_names","genres","flat","filter","includes","long_term_data","getTopArtists","token","ajax","url","type","beforeSend","xhr","setRequestHeader","success","componentDidMount","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as $ from \"jquery\";\nimport Chart_Constructor from './chart_constructor';\nimport spotifyServiceWorker from './spotify-service-worker';\n// https://medium.com/@jonnykalambay/now-playing-using-spotifys-awesome-api-with-react-7db8173a7b13?\n\nclass Spotify_Previewer extends Component {\n    constructor(){\n        super();\n        const params = this.getHashParams()\n        const default_data = [{'x': 4, 'y': 2}];\n        this.state = {\n            access_token: '',\n            loggedIn: params.access_token ? true : false,\n            long_term: {\n                top_artists: default_data,\n                top_artists_popularity: default_data,\n                popularity_list: default_data, \n                average_artist_rank: default_data, \n                genre_quantity: default_data, \n                genre_intersection: default_data,\n                radialRankings: [{'angle': 360}], \n            },\n        }\n        if (params.access_token) {\n            this.setState(({\n                access_token: params.access_token\n            }));\n        }\n    }\n    top_5_artists (top_artists) {\n        return (top_artists.slice(0,4)).reduce((accumulator, currentValue) => accumulator.concat({'x': currentValue.name, 'y': currentValue.popularity}), []);\n         \n    }\n    piChartRankings(ranks) {\n        let keys = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90];\n        var values =[]\n        keys.forEach(e => {\n            var count = 0;\n            ranks.forEach(element => {\n                if(e === (Math.trunc((element-0.5)/10))*10) {\n                    count ++;\n                }\n            })\n            values.push(count)\n        })\n        // Radial Chart \n        var formattedResult = [];\n        for (var i = 0; i <= values.length -1; i++) {\n            if(values[i] !== 0) {\n                formattedResult.push({'angle': values[i], 'label': 10*i, 'radius': i/2+5 })\n            }\n        }\n        // Bar Series\n        // var formattedResult = [];\n        // for (var i = 0; i <= values.length -1; i++) {\n        //     if(values[i] !== 0) {\n        //         formattedResult.push({'x': i, 'y': values[i],})\n        //     }\n        // }\n        return formattedResult;\n    }\n    analyseTermData(data) {\n        const test_array = [\"pop\", \"rap\", \"ssdsdsd\"];\n        const items = data.items;\n        let top_artists_names = items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.name), []);\n        let top_artists_popularity = items.reduce((accumulator, currentValue) => accumulator.concat({'artist': currentValue.name, 'rank': currentValue.popularity}), []);\n        let popularity_list = items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.popularity), []);\n        let average_artist_rank = items.reduce((accumulator, currentValue) => accumulator + currentValue.popularity, 0)/50;\n        let genre_quantity = items.reduce((accumulator, currentValue) => accumulator.concat([currentValue.genres]), []).flat(); \n        const genre_intersection = test_array.filter(element => genre_quantity.includes(element));\n        const radialRankings = this.piChartRankings(popularity_list)\n        const top_5_artists = this.top_5_artists(items)\n        const long_term_data = { \n            top_artists_names,\n            top_5_artists,\n            top_artists_popularity,\n            popularity_list, \n            average_artist_rank, \n            genre_quantity, \n            genre_intersection,\n            radialRankings \n        };\n        return long_term_data;       \n    }\n    getTopArtists(token) {\n            $.ajax({\n                url: 'https://api.spotify.com/v1/me/top/artists?time_range=long_term&limit=50&offset=0',\n                type: \"GET\",\n                beforeSend: (xhr) => {\n                xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n                },\n                success: (data) => {\n                this.setState({long_term: this.analyseTermData(data)});\n                }\n            });\n    }\n    componentDidMount(){\n        if(this.state.loggedIn) {\n            this.getTopArtists(this.getHashParams().access_token);\n        }\n    }\n   \n    getHashParams() {\n        var hashParams = {};\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        while ( e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        }\n        return hashParams;\n    }\n\n    render() {\n            return (\n                <div>\n                    <h1>How Similar Are Our Music Tastes?</h1>\n                    <h3>This is super important in order to ensure..</h3>\n                {!this.state.loggedIn ? (\n                <div>\n                    <a href='http://localhost:5000/login'>\n                        <button>'Do Something with Spotify'</button>\n                    </a>\n                </div>\n                ) : (\n                <div>\n                    <Chart_Constructor data={this.state.long_term.radialRankings}/>\n                </div>\n                )\n                } \n                \n                \n                </div>\n            );\n    }\n}\n\nexport default Spotify_Previewer;"]},"metadata":{},"sourceType":"module"}