{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/spotify_previewer.js\";\nimport React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport * as $ from \"jquery\";\nimport Chart_Constructor from './chart_constructor'; // https://medium.com/@jonnykalambay/now-playing-using-spotifys-awesome-api-with-react-7db8173a7b13?\n\nconst spotifyWebApi = new Spotify();\n\nclass Spotify_Previewer extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      access_token: '',\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        image: ''\n      }\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n      this.setState({\n        access_token: params.access_token\n      });\n    }\n  }\n\n  analyseData(data) {\n    // console.log(data);\n    console.log(data.items);\n    let average_artist_rank = data.items.reduce((accumulator, currentValue) => accumulator + currentValue.popularity, 0) / 50;\n    let top_artists = data.items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.name), []);\n    let genre_quantity = data.items.reduce((accumulator, currentValue) => accumulator.concat([currentValue.genres]), []).flat();\n    this.setState({\n      top_artists,\n      average_artist_rank,\n      genre_quantity\n    });\n    console.log(this.state.top_artists);\n    console.log(this.state.average_artist_rank);\n    console.log(this.state.genre_quantity);\n    const test_array = [\"pop\", \"rap\", \"ssdsdsd\"];\n    const genre_intersection = test_array.filter(element => genre_quantity.includes(element));\n    console.log('intersection', genre_intersection);\n  } // getNowPlaying() {\n  //     spotifyWebApi.getMyCurrentPlaybackState ()\n  //     .then((response) => {\n  //         this.setState({\n  //             name: response.item.name,\n  //             image: response.item.album.images[0].url\n  //         })\n  //         console.log(this.state.name);\n  //     }) \n  // }\n\n\n  getTopArtists() {\n    ['short_term', 'medium_term', 'long_term'].map(e => {\n      $.ajax({\n        url: \"https://api.spotify.com/v1/me/top/artists?time_range=\".concat(e, \"&limit=50&offset=0\"),\n        type: \"GET\",\n        beforeSend: xhr => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.getHashParams().access_token);\n        },\n        success: data => {\n          //   this.analyseData(data);\n          console.log(data);\n        }\n      });\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.loggedIn) {\n      this.getTopArtists();\n    } // this.forceUpdate();\n\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"How Similar Are Our Music Tastes?\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"This is super important in order to ensure..\"), !this.state.loggedIn ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:5000/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"'Do Something with Spotify'\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.name), React.createElement(\"img\", {\n      src: this.state.image,\n      alt: \"Album Image\",\n      height: \"auto\",\n      width: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(Chart_Constructor, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Spotify_Previewer;","map":{"version":3,"sources":["/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/spotify_previewer.js"],"names":["React","Component","Spotify","$","Chart_Constructor","spotifyWebApi","Spotify_Previewer","constructor","params","getHashParams","state","access_token","loggedIn","nowPlaying","name","image","setAccessToken","setState","analyseData","data","console","log","items","average_artist_rank","reduce","accumulator","currentValue","popularity","top_artists","concat","genre_quantity","genres","flat","test_array","genre_intersection","filter","element","includes","getTopArtists","map","e","ajax","url","type","beforeSend","xhr","setRequestHeader","success","componentDidMount","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport * as $ from \"jquery\";\nimport Chart_Constructor from './chart_constructor';\n// https://medium.com/@jonnykalambay/now-playing-using-spotifys-awesome-api-with-react-7db8173a7b13?\n\nconst spotifyWebApi = new Spotify();\n\nclass Spotify_Previewer extends Component {\n    constructor(){\n        super();\n        const params = this.getHashParams()\n        this.state = {\n            access_token: '',\n            loggedIn: params.access_token ? true : false,\n            nowPlaying: {\n                name: 'Not Checked',\n                image: ''\n            },\n        }\n        if (params.access_token) {\n            spotifyWebApi.setAccessToken(params.access_token);\n            this.setState(({\n                access_token: params.access_token\n            }));\n        }\n    }\n    analyseData(data) {\n        // console.log(data);\n        console.log(data.items)\n        let average_artist_rank = data.items.reduce((accumulator, currentValue) => accumulator + currentValue.popularity, 0)/50;\n        let top_artists = data.items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.name), []);\n        let genre_quantity = data.items.reduce((accumulator, currentValue) => accumulator.concat([currentValue.genres]), []).flat();\n        this.setState({top_artists, average_artist_rank, genre_quantity});\n        console.log(this.state.top_artists)\n        console.log(this.state.average_artist_rank);\n        console.log(this.state.genre_quantity);\n        const test_array = [\"pop\", \"rap\", \"ssdsdsd\"];\n        const genre_intersection = test_array.filter(element => genre_quantity.includes(element));\n        console.log('intersection', genre_intersection)\n    }\n    // getNowPlaying() {\n    //     spotifyWebApi.getMyCurrentPlaybackState ()\n    //     .then((response) => {\n    //         this.setState({\n    //             name: response.item.name,\n    //             image: response.item.album.images[0].url\n    //         })\n    //         console.log(this.state.name);\n    //     }) \n    // }\n    getTopArtists() {\n        ['short_term', 'medium_term', 'long_term'].map(e => {\n        $.ajax({\n            url: `https://api.spotify.com/v1/me/top/artists?time_range=${e}&limit=50&offset=0`,\n            type: \"GET\",\n            beforeSend: (xhr) => {\n              xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.getHashParams().access_token);\n            },\n            success: (data) => {\n            //   this.analyseData(data);\n            console.log(data);\n            }\n        });\n    });\n        \n    }\n    componentDidMount(){\n        if(this.state.loggedIn) {\n            this.getTopArtists();\n        }\n        // this.forceUpdate();\n        \n    }\n   \n    getHashParams() {\n        var hashParams = {};\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        while ( e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        }\n        return hashParams;\n    }\n\n    render() {\n            return (\n                <div>\n                    <h1>How Similar Are Our Music Tastes?</h1>\n                    <h3>This is super important in order to ensure..</h3>\n                {!this.state.loggedIn ? (\n                <div>\n                    <a href='http://localhost:5000/login'>\n                        <button>'Do Something with Spotify'</button>\n                    </a>\n                </div>\n                ) : (\n                <div>\n                    <h3>{this.state.name}</h3>\n                    <img src={this.state.image} alt='Album Image' height='auto' width='auto'/>\n                </div>\n                )\n                } \n                <Chart_Constructor/>\n                </div>\n            );\n    }\n}\n\nexport default Spotify_Previewer;"]},"metadata":{},"sourceType":"module"}