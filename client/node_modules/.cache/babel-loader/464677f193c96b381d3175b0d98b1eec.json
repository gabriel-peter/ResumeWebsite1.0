{"ast":null,"code":"import _defineProperty from \"/Users/gabrielpeter/PersonalWebsite1.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_comparer/spotify_previewer/chart_constructor.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { XYPlot, LineSeries, YAxis, VerticalBarSeries, LabelSeries, RadialChart, RadarChart } from 'react-vis';\nimport './graph_styling.css';\nimport Genre_Analysis from './genre_analysis'; // http://uber.github.io/react-vis/documentation\n\nclass Chart_Constructor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: null,\n      artistsWithFocus: props.top_5_artists_images\n    };\n  }\n\n  render() {\n    const data1 = this.props.data1;\n    const data2 = this.props.data2;\n    const data3 = this.props.data3;\n    const index = this.state.index;\n    const dataWithColor = data2.map((d, i) => _objectSpread({}, d, {\n      color: Number(i !== index)\n    }));\n    const artistsWithFocus = this.props.top_5_artists_images.map((d, i) => _objectSpread({}, d, {\n      highlight: i === index\n    }));\n    const labelData = data2.map((d, idx) => ({\n      x: d.x,\n      y: d.y\n    }));\n    return React.createElement(\"div\", {\n      className: \"my-graphs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top-5-artists_w_graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(XYPlot, {\n      xType: \"ordinal\",\n      width: 300,\n      height: 300 // https://codesandbox.io/s/bar-series-that-change-colors-on-mouseover-d9zh8\n      ,\n      onMouseLeave: () => this.setState({\n        index: null,\n        artistsWithFocus: this.props.top_5_artists_images\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(VerticalBarSeries, {\n      data: dataWithColor,\n      animation: {\n        damping: 9,\n        stiffness: 300\n      },\n      onNearestX: (d, {\n        index\n      }) => this.setState({\n        index,\n        artistsWithFocus\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(LabelSeries, {\n      data: labelData,\n      allowOffsetToBeReversed: true,\n      getLabel: d => d.y,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"my-top-artists\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.artistsWithFocus.map(artist => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, !artist.highlight === true ? React.createElement(\"div\", {\n      className: 'an-artist',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: artist.images[0].url,\n      alt: '',\n      height: 200,\n      width: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: 'highlighted-title',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, artist.name))))), React.createElement(\"div\", {\n      className: \"popularity-analysis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"average-popularity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Your favorite artists averaged around:\"), React.createElement(\"div\", {\n      className: \"big-number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.average_artist_rank, \"/100\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"in their overall popularity score!\")), React.createElement(RadialChart // data={[ {angle: 1, radius: 10}, \n    //     {angle: 2, label: 'Super Custom label', subLabel: 'With annotation', radius: 20},\n    //     {angle: 5, radius: 5, label: 'Alt Label'}, {angle: 3, radius: 14}, \n    //     {angle: 5, radius: 12, subLabel: 'Sub Label only', className: 'custom-class'} ]}\n    , {\n      data: data1,\n      width: 300,\n      height: 300,\n      labelsStyle: {\n        text: {\n          fontSize: 20\n        }\n      },\n      animation: {\n        damping: 9,\n        stiffness: 300\n      },\n      showLabels: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Genre_Analysis, {\n      radarData: this.props.data3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart_Constructor;","map":{"version":3,"sources":["/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_comparer/spotify_previewer/chart_constructor.js"],"names":["React","Component","XYPlot","LineSeries","YAxis","VerticalBarSeries","LabelSeries","RadialChart","RadarChart","Genre_Analysis","Chart_Constructor","constructor","props","state","index","artistsWithFocus","top_5_artists_images","render","data1","data2","data3","dataWithColor","map","d","i","color","Number","highlight","labelData","idx","x","y","setState","damping","stiffness","artist","images","url","name","average_artist_rank","text","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {XYPlot, LineSeries, YAxis, VerticalBarSeries, LabelSeries, RadialChart, RadarChart} from 'react-vis';\nimport './graph_styling.css';\nimport Genre_Analysis from './genre_analysis';\n// http://uber.github.io/react-vis/documentation\n\nclass Chart_Constructor extends Component {\n    constructor(props) {\n        super(props)\n      this.state= {\n        index: null,\n        artistsWithFocus: props.top_5_artists_images\n      }\n    }\n  render() {\n      const data1 = this.props.data1\n      const data2 = this.props.data2\n      const data3 = this.props.data3\n      const { index } = this.state;\n      const dataWithColor = data2.map((d, i) => ({...d, color: Number(i !== index)}));\n      const artistsWithFocus = this.props.top_5_artists_images.map((d, i) => ({...d, highlight: i === index}));\n      const labelData = data2.map((d, idx) => ({\n        x: d.x,\n        y: d.y\n      }));\n    return (\n      <div className='my-graphs'>\n        <div className='top-5-artists_w_graph'>\n        <XYPlot\n          xType=\"ordinal\"\n          width={300}\n          height={300}\n          // https://codesandbox.io/s/bar-series-that-change-colors-on-mouseover-d9zh8\n          onMouseLeave={() => this.setState({ index: null, artistsWithFocus: this.props.top_5_artists_images })}\n        >\n          <VerticalBarSeries\n            data={dataWithColor}    \n            animation={{damping: 9, stiffness: 300}}    \n            onNearestX={(d, { index }) => this.setState({ index, artistsWithFocus })}\n          />\n          <LabelSeries \n              data={labelData}\n              allowOffsetToBeReversed\n              getLabel={d => d.y}/>\n        </XYPlot>\n        <div className='my-top-artists'>\n          {this.state.artistsWithFocus.map((artist) =>\n          <div>\n          {!artist.highlight===true ? (\n            <div className={'an-artist'}>\n              <img src={artist.images[0].url} alt={''} height={200} width={200}/>\n            </div>) : (\n            <div className={'highlighted-title'}>{artist.name}</div>\n            )}\n          </div>\n          )}\n        </div>\n        </div>\n        <div className='popularity-analysis'>\n          <div className='average-popularity'>\n            <div>Your favorite artists averaged around:</div>\n            <div className='big-number'>{this.props.average_artist_rank}/100</div>\n            <div>in their overall popularity score!</div>\n          </div>\n        <RadialChart\n            // data={[ {angle: 1, radius: 10}, \n            //     {angle: 2, label: 'Super Custom label', subLabel: 'With annotation', radius: 20},\n            //     {angle: 5, radius: 5, label: 'Alt Label'}, {angle: 3, radius: 14}, \n            //     {angle: 5, radius: 12, subLabel: 'Sub Label only', className: 'custom-class'} ]}\n            data={data1}\n            width={300}\n            height={300}\n            labelsStyle={{text: {fontSize: 20}}}\n            animation={{damping: 9, stiffness: 300}}\n            showLabels={true}/> \n        </div>\n        <Genre_Analysis radarData={this.props.data3}/>\n      </div>\n    );\n  }\n}\n\nexport default Chart_Constructor;"]},"metadata":{},"sourceType":"module"}