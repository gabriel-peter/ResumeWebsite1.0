{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/chart_constructor.js\";\nimport React, { Component } from 'react';\nimport { XYPlot, LineSeries, VerticalBarSeries, MarkSeries, RadialChart, RadarChart } from 'react-vis'; // import RadarChart from 'radar-chart';\n\nimport { format } from 'd3-format';\nimport './graph_styling.css'; // http://uber.github.io/react-vis/documentation\n\nclass Chart_Constructor extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const data1 = this.props.data1;\n    const data2 = this.props.data2;\n    const data3 = this.props.data3;\n    const domain = [0, 100];\n    const wideFormat = format('.3r');\n    console.log(data2);\n    console.log(data3);\n    return React.createElement(\"div\", {\n      className: \"my-graphs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(RadarChart, {\n      data: data3 // startingAngle={Math.PI / 7}\n      ,\n      domains: [{\n        name: 'pop',\n        domain: domain\n      }, {\n        name: 'rap',\n        domain: domain\n      }, {\n        name: 'country',\n        domain: domain\n      }, {\n        name: 'rock',\n        domain: domain\n      }, {\n        name: 'metal',\n        domain: domain\n      }, {\n        name: 'alternative',\n        domain: domain\n      }],\n      width: 400,\n      height: 400,\n      style: {\n        polygons: {\n          strokeWidth: 1,\n          strokeOpacity: 0.8,\n          fillOpacity: 0.8\n        },\n        labels: {\n          textAnchor: 'middle'\n        },\n        axes: {\n          line: {\n            fillOpacity: 0.8,\n            strokeWidth: 0.5,\n            strokeOpacity: 0.8\n          },\n          ticks: {\n            fillOpacity: 0.3,\n            strokeOpacity: 0.3\n          },\n          text: {\n            fontSize: 9\n          }\n        }\n      },\n      colorRange: ['red'],\n      hideInnerMostValues: true,\n      renderAxesOverPolygons: true,\n      showLabels: true // onSeriesMouseOver={(data) => {\n      //   this.setState({hoveredCell: data.event[0]});\n      // }}\n      // onSeriesMouseOut={() => this.setState({hoveredCell: false})}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(XYPlot, {\n      xType: \"ordinal\",\n      height: 300,\n      width: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(VerticalBarSeries, {\n      color: 'orange',\n      data: data2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(RadialChart // data={[ {angle: 1, radius: 10}, \n    //     {angle: 2, label: 'Super Custom label', subLabel: 'With annotation', radius: 20},\n    //     {angle: 5, radius: 5, label: 'Alt Label'}, {angle: 3, radius: 14}, \n    //     {angle: 5, radius: 12, subLabel: 'Sub Label only', className: 'custom-class'} ]}\n    , {\n      data: data1,\n      width: 300,\n      height: 300,\n      animation: {\n        damping: 9,\n        stiffness: 300\n      },\n      showLabels: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart_Constructor;","map":{"version":3,"sources":["/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/chart_constructor.js"],"names":["React","Component","XYPlot","LineSeries","VerticalBarSeries","MarkSeries","RadialChart","RadarChart","format","Chart_Constructor","constructor","props","render","data1","data2","data3","domain","wideFormat","console","log","name","polygons","strokeWidth","strokeOpacity","fillOpacity","labels","textAnchor","axes","line","ticks","text","fontSize","damping","stiffness"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {XYPlot, LineSeries, VerticalBarSeries,MarkSeries, RadialChart, RadarChart} from 'react-vis';\n// import RadarChart from 'radar-chart';\nimport {format} from 'd3-format';\nimport './graph_styling.css'\n// http://uber.github.io/react-vis/documentation\n\nclass Chart_Constructor extends Component {\n    constructor(props) {\n        super(props)\n\n    }\n  render() {\n      const data1 = this.props.data1\n      const data2 = this.props.data2\n      const data3 = this.props.data3\n      const domain = [0, 100];\n      const wideFormat = format('.3r');\n      console.log(data2)\n      console.log(data3)\n    return (\n      <div className='my-graphs'>\n      <RadarChart\n        data={data3}\n        // startingAngle={Math.PI / 7}\n        domains={[\n          {name: 'pop', domain: domain,},\n          {name: 'rap', domain: domain,},\n          {name: 'country', domain: domain,},\n          {name: 'rock', domain: domain,},\n          {name: 'metal', domain: domain,},\n          {name: 'alternative', domain: domain,}\n        ]}\n        width={400}\n        height={400}\n        style={{\n          polygons: {\n            strokeWidth: 1,\n            strokeOpacity: 0.8,\n            fillOpacity: 0.8\n          },\n          labels: {\n            textAnchor: 'middle'\n          },\n          axes: {\n            line: {\n              fillOpacity: 0.8,\n              strokeWidth: 0.5,\n              strokeOpacity: 0.8\n            },\n            ticks: {\n              fillOpacity: 0.3,\n              strokeOpacity: 0.3,\n            },\n            text: {\n              fontSize: 9\n            }\n          }\n        }}\n        colorRange={['red']}\n        hideInnerMostValues={true}\n        renderAxesOverPolygons={true}\n        showLabels={true}\n        // onSeriesMouseOver={(data) => {\n        //   this.setState({hoveredCell: data.event[0]});\n        // }}\n        // onSeriesMouseOut={() => this.setState({hoveredCell: false})}\n      >\n         {/* {hoveredCell && (\n          <Hint value={{x: 0, y: 0}}>\n            <div style={tipStyle}>{hoveredCell.name}</div>\n          </Hint>\n        )}  */}\n      </RadarChart>\n\n        <XYPlot  xType=\"ordinal\" height={300} width={300}>\n            <VerticalBarSeries color={'orange'}\n            data={data2}/>\n         </XYPlot>\n         \n        {/* <XYPlot height={300} width={300}>\n            <LineSeries data={data2} />\n        </XYPlot> */}\n        <RadialChart\n            // data={[ {angle: 1, radius: 10}, \n            //     {angle: 2, label: 'Super Custom label', subLabel: 'With annotation', radius: 20},\n            //     {angle: 5, radius: 5, label: 'Alt Label'}, {angle: 3, radius: 14}, \n            //     {angle: 5, radius: 12, subLabel: 'Sub Label only', className: 'custom-class'} ]}\n            data={data1}\n            width={300}\n            height={300}\n            animation={{damping: 9, stiffness: 300}}\n\n            showLabels={true}/> \n      </div>\n    );\n  }\n}\n\nexport default Chart_Constructor;"]},"metadata":{},"sourceType":"module"}