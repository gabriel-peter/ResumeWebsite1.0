{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/spotify_previewer.js\";\nimport React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport * as $ from \"jquery\";\nimport Chart_Constructor from './chart_constructor';\nimport spotifyServiceWorker from './spotify-service-worker'; // https://medium.com/@jonnykalambay/now-playing-using-spotifys-awesome-api-with-react-7db8173a7b13?\n\nconst spotifyWebApi = new Spotify();\n\nclass Spotify_Previewer extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const top_artists_popularity = [{\n      'x': 4,\n      'y': 2\n    }];\n    this.state = {\n      // formattedResult: top_artists_popularity,\n      access_token: '',\n      loggedIn: params.access_token ? true : false,\n      // nowPlaying: {\n      //     name: 'Not Checked',\n      //     image: ''\n      // },\n      short_term: {\n        top_artists_popularity\n      },\n      medium_term: {\n        top_artists_popularity\n      },\n      long_term: {\n        top_artists_popularity\n      }\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n      this.setState({\n        access_token: params.access_token\n      });\n    }\n  } // piChartRankings(ranks) {\n  //     let keys = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90];\n  //     var values =[]\n  //     keys.forEach(e => {\n  //         var count = 0;\n  //         ranks.forEach(element => {\n  //             if(e === (Math.trunc((element-0.5)/10))*10) {\n  //                 count ++;\n  //             }\n  //         })\n  //         values.push(count)\n  //     })\n  //     // Radial Chart \n  //     var formattedResult = [];\n  //     for (var i = 0; i <= values.length -1; i++) {\n  //         if(values[i] !== 0) {\n  //             formattedResult.push({'angle': values[i], 'label': 10*i, 'radius': i/2+5 })\n  //         }\n  //     }\n  //     // Bar Series\n  //     // var formattedResult = [];\n  //     // for (var i = 0; i <= values.length -1; i++) {\n  //     //     if(values[i] !== 0) {\n  //     //         formattedResult.push({'x': i, 'y': values[i],})\n  //     //     }\n  //     // }\n  //     console.log('formatted pi Chart Data',formattedResult)\n  //     this.setState({\n  //         formattedResult\n  //     })\n  // }\n  // analyseTermData(data, term) {\n  //     const test_array = [\"pop\", \"rap\", \"ssdsdsd\"];\n  //     const items = data.items;\n  //     let top_artists = items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.name), []);\n  //     // let top_artists_popularity = items.reduce((accumulator, currentValue) => accumulator.concat({'artist': currentValue.name, 'rank': currentValue.popularity}), []);\n  //     let top_artists_popularity = items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.popularity), []);\n  //     let average_artist_rank = items.reduce((accumulator, currentValue) => accumulator + currentValue.popularity, 0)/50;\n  //     let genre_quantity = items.reduce((accumulator, currentValue) => accumulator.concat([currentValue.genres]), []).flat(); \n  //     const genre_intersection = test_array.filter(element => genre_quantity.includes(element));\n  //     if(term === 'short_term'){\n  //         this.setState({ short_term: {top_artists,\n  //              top_artists_popularity, \n  //              average_artist_rank, genre_quantity, genre_intersection,}});\n  //     } else if(term === 'medium_term'){\n  //         this.setState({ medium_term: {top_artists, \n  //             top_artists_popularity,\n  //              average_artist_rank, genre_quantity, genre_intersection,}});\n  //     } else {\n  //         this.setState({ long_term: {top_artists, \n  //             top_artists_popularity, \n  //             average_artist_rank, genre_quantity, genre_intersection,}});\n  //         console.log(this.state.short_term.top_artists_popularity)\n  //         console.log(this.state.medium_term.average_artist_rank);\n  //         console.log(this.state.long_term.genre_quantity);\n  //         this.piChartRankings(top_artists_popularity)\n  //     }        \n  // }\n  // // getNowPlaying() {\n  // //     spotifyWebApi.getMyCurrentPlaybackState ()\n  // //     .then((response) => {\n  // //         this.setState({\n  // //             name: response.item.name,\n  // //             image: response.item.album.images[0].url\n  // //         })\n  // //         console.log(this.state.name);\n  // //     }) \n  // // }\n  // getTopArtists() {\n  //     ['short_term', 'medium_term', 'long_term'].map(e => {\n  //         $.ajax({\n  //             url: `https://api.spotify.com/v1/me/top/artists?time_range=${e}&limit=50&offset=0`,\n  //             type: \"GET\",\n  //             beforeSend: (xhr) => {\n  //             xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.getHashParams().access_token);\n  //             },\n  //             success: (data) => {\n  //             this.analyseTermData(data, e);\n  //             }\n  //         });\n  //     });\n  // }\n\n\n  componentWillMount() {\n    if (this.state.loggedIn) {\n      this.setState({\n        long_term: spotifyServiceWorker.getTopArtists(this.getHashParams().access_token)\n      });\n    } // fetch('/api/spotify-user-data/')\n    // .then(res => res.json())\n    // .then(schools => this.setState({schools},));\n\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"How Similar Are Our Music Tastes?\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"This is super important in order to ensure..\"), !this.state.loggedIn ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:5000/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"'Do Something with Spotify'\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.state.name), React.createElement(\"img\", {\n      src: this.state.image,\n      alt: \"Album Image\",\n      height: \"auto\",\n      width: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Chart_Constructor, {\n      data: this.state.long_term.top_artists_popularity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Spotify_Previewer;","map":{"version":3,"sources":["/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/spotify_previewer.js"],"names":["React","Component","Spotify","$","Chart_Constructor","spotifyServiceWorker","spotifyWebApi","Spotify_Previewer","constructor","params","getHashParams","top_artists_popularity","state","access_token","loggedIn","short_term","medium_term","long_term","setAccessToken","setState","componentWillMount","getTopArtists","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","render","name","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport * as $ from \"jquery\";\nimport Chart_Constructor from './chart_constructor';\nimport spotifyServiceWorker from './spotify-service-worker';\n// https://medium.com/@jonnykalambay/now-playing-using-spotifys-awesome-api-with-react-7db8173a7b13?\n\nconst spotifyWebApi = new Spotify();\n\nclass Spotify_Previewer extends Component {\n    constructor(){\n        super();\n        const params = this.getHashParams()\n        const top_artists_popularity = [{'x': 4, 'y': 2}];\n        this.state = {\n            // formattedResult: top_artists_popularity,\n            access_token: '',\n            loggedIn: params.access_token ? true : false,\n            // nowPlaying: {\n            //     name: 'Not Checked',\n            //     image: ''\n            // },\n            short_term: {top_artists_popularity},\n            medium_term: {top_artists_popularity},\n            long_term: {top_artists_popularity},\n        }\n        if (params.access_token) {\n            spotifyWebApi.setAccessToken(params.access_token);\n            this.setState(({\n                access_token: params.access_token\n            }));\n        }\n    }\n    // piChartRankings(ranks) {\n    //     let keys = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90];\n    //     var values =[]\n    //     keys.forEach(e => {\n    //         var count = 0;\n    //         ranks.forEach(element => {\n    //             if(e === (Math.trunc((element-0.5)/10))*10) {\n    //                 count ++;\n    //             }\n    //         })\n    //         values.push(count)\n    //     })\n    //     // Radial Chart \n    //     var formattedResult = [];\n    //     for (var i = 0; i <= values.length -1; i++) {\n    //         if(values[i] !== 0) {\n    //             formattedResult.push({'angle': values[i], 'label': 10*i, 'radius': i/2+5 })\n    //         }\n    //     }\n    //     // Bar Series\n    //     // var formattedResult = [];\n    //     // for (var i = 0; i <= values.length -1; i++) {\n    //     //     if(values[i] !== 0) {\n    //     //         formattedResult.push({'x': i, 'y': values[i],})\n    //     //     }\n    //     // }\n        \n    //     console.log('formatted pi Chart Data',formattedResult)\n    //     this.setState({\n    //         formattedResult\n    //     })\n    // }\n    // analyseTermData(data, term) {\n    //     const test_array = [\"pop\", \"rap\", \"ssdsdsd\"];\n    //     const items = data.items;\n    //     let top_artists = items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.name), []);\n    //     // let top_artists_popularity = items.reduce((accumulator, currentValue) => accumulator.concat({'artist': currentValue.name, 'rank': currentValue.popularity}), []);\n    //     let top_artists_popularity = items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.popularity), []);\n    //     let average_artist_rank = items.reduce((accumulator, currentValue) => accumulator + currentValue.popularity, 0)/50;\n    //     let genre_quantity = items.reduce((accumulator, currentValue) => accumulator.concat([currentValue.genres]), []).flat(); \n    //     const genre_intersection = test_array.filter(element => genre_quantity.includes(element));\n    //     if(term === 'short_term'){\n    //         this.setState({ short_term: {top_artists,\n    //              top_artists_popularity, \n    //              average_artist_rank, genre_quantity, genre_intersection,}});\n    //     } else if(term === 'medium_term'){\n    //         this.setState({ medium_term: {top_artists, \n    //             top_artists_popularity,\n    //              average_artist_rank, genre_quantity, genre_intersection,}});\n    //     } else {\n    //         this.setState({ long_term: {top_artists, \n    //             top_artists_popularity, \n    //             average_artist_rank, genre_quantity, genre_intersection,}});\n    //         console.log(this.state.short_term.top_artists_popularity)\n    //         console.log(this.state.medium_term.average_artist_rank);\n    //         console.log(this.state.long_term.genre_quantity);\n    //         this.piChartRankings(top_artists_popularity)\n    //     }        \n    // }\n    // // getNowPlaying() {\n    // //     spotifyWebApi.getMyCurrentPlaybackState ()\n    // //     .then((response) => {\n    // //         this.setState({\n    // //             name: response.item.name,\n    // //             image: response.item.album.images[0].url\n    // //         })\n    // //         console.log(this.state.name);\n    // //     }) \n    // // }\n    // getTopArtists() {\n    //     ['short_term', 'medium_term', 'long_term'].map(e => {\n    //         $.ajax({\n    //             url: `https://api.spotify.com/v1/me/top/artists?time_range=${e}&limit=50&offset=0`,\n    //             type: \"GET\",\n    //             beforeSend: (xhr) => {\n    //             xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.getHashParams().access_token);\n    //             },\n    //             success: (data) => {\n    //             this.analyseTermData(data, e);\n    //             }\n    //         });\n    //     });\n        \n    // }\n    componentWillMount(){\n        if(this.state.loggedIn) {\n            this.setState({ long_term: spotifyServiceWorker.getTopArtists(this.getHashParams().access_token)});\n        }\n        // fetch('/api/spotify-user-data/')\n        // .then(res => res.json())\n        // .then(schools => this.setState({schools},));\n        \n    }\n   \n    getHashParams() {\n        var hashParams = {};\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        while ( e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        }\n        return hashParams;\n    }\n\n    render() {\n            return (\n                <div>\n                    <h1>How Similar Are Our Music Tastes?</h1>\n                    <h3>This is super important in order to ensure..</h3>\n                {!this.state.loggedIn ? (\n                <div>\n                    <a href='http://localhost:5000/login'>\n                        <button>'Do Something with Spotify'</button>\n                    </a>\n                </div>\n                ) : (\n                <div>\n                    <h3>{this.state.name}</h3>\n                    <img src={this.state.image} alt='Album Image' height='auto' width='auto'/>\n                    <Chart_Constructor data={this.state.long_term.top_artists_popularity}/>\n                </div>\n                )\n                } \n                \n                \n                </div>\n            );\n    }\n}\n\nexport default Spotify_Previewer;"]},"metadata":{},"sourceType":"module"}