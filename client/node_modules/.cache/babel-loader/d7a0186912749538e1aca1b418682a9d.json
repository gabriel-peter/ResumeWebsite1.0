{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/chart_constructor.js\";\nimport React, { Component } from 'react';\nimport { XYPlot, LineSeries, VerticalBarSeries, RadialChart } from 'react-vis';\nimport './react-vis-graph-style.css'; // http://uber.github.io/react-vis/documentation\n\nclass Chart_Constructor extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const data = this.props.data;\n    console.log('from constructor', data); // const data = [\n    //   {x: 0, y: 8},\n    //   {x: 1, y: 5},\n    //   {x: 2, y: 4},\n    //   {x: 3, y: 9},\n    //   {x: 4, y: 1},\n    //   {x: 5, y: 7},\n    //   {x: 6, y: 6},\n    //   {x: 7, y: 3},\n    //   {x: 8, y: 2},\n    //   {x: 9, y: 0}\n    // ];\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(XYPlot, {\n      height: 300,\n      width: 300,\n      colorType: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(VerticalBarSeries, {\n      data: data.reduce((accumulator, currentValue) => accumulator.concat({\n        'x': currentValue\n      }), []),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(RadialChart // data={[ {angle: 1, radius: 10}, \n    //     {angle: 2, label: 'Super Custom label', subLabel: 'With annotation', radius: 20},\n    //     {angle: 5, radius: 5, label: 'Alt Label'}, {angle: 3, radius: 14}, \n    //     {angle: 5, radius: 12, subLabel: 'Sub Label only', className: 'custom-class'} ]}\n    , {\n      data: data.reduce((accumulator, currentValue) => accumulator.concat({\n        'angle': currentValue / 4200\n      }), []),\n      width: 300,\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart_Constructor;","map":{"version":3,"sources":["/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/chart_constructor.js"],"names":["React","Component","XYPlot","LineSeries","VerticalBarSeries","RadialChart","Chart_Constructor","constructor","props","render","data","console","log","reduce","accumulator","currentValue","concat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,EAAgBC,UAAhB,EAA4BC,iBAA5B,EAA+CC,WAA/C,QAAiE,WAAjE;AACA,OAAO,6BAAP,C,CACA;;AAEA,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AACtCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEH;;AACHC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC,EAFK,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,GAAhB;AAAqB,MAAA,KAAK,EAAE,GAA5B;AACM,MAAA,SAAS,EAAC,UADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAEA,IAAI,CAACG,MAAL,CAAY,CAACC,WAAD,EAAcC,YAAd,KAA+BD,WAAW,CAACE,MAAZ,CAAmB;AAAC,aAAID;AAAL,OAAnB,CAA3C,EAAmF,EAAnF,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF,EAWE,oBAAC,WAAD,CACI;AACA;AACA;AACA;AAJJ;AAKI,MAAA,IAAI,EAAEL,IAAI,CAACG,MAAL,CAAY,CAACC,WAAD,EAAcC,YAAd,KAA+BD,WAAW,CAACE,MAAZ,CAAmB;AAAE,iBAASD,YAAY,GAAC;AAAxB,OAAnB,CAA3C,EAA8F,EAA9F,CALV;AAMI,MAAA,KAAK,EAAE,GANX;AAOI,MAAA,MAAM,EAAE,GAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAsBD;;AA1CuC;;AA6C1C,eAAeT,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport {XYPlot, LineSeries, VerticalBarSeries, RadialChart} from 'react-vis';\nimport './react-vis-graph-style.css';\n// http://uber.github.io/react-vis/documentation\n\nclass Chart_Constructor extends Component {\n    constructor(props) {\n        super(props)\n\n    }\n  render() {\n      const data = this.props.data\n      console.log('from constructor', data)\n    // const data = [\n    //   {x: 0, y: 8},\n    //   {x: 1, y: 5},\n    //   {x: 2, y: 4},\n    //   {x: 3, y: 9},\n    //   {x: 4, y: 1},\n    //   {x: 5, y: 7},\n    //   {x: 6, y: 6},\n    //   {x: 7, y: 3},\n    //   {x: 8, y: 2},\n    //   {x: 9, y: 0}\n    // ];\n    return (\n      <div>\n        <XYPlot height={300} width={300}\n              colorType=\"category\">\n            <VerticalBarSeries data={data.reduce((accumulator, currentValue) => accumulator.concat({'x':currentValue}), [])} />\n         </XYPlot>\n         {/*\n        <XYPlot height={300} width={300}>\n            <LineSeries data={data} />\n        </XYPlot>\n\n         */}\n        <RadialChart\n            // data={[ {angle: 1, radius: 10}, \n            //     {angle: 2, label: 'Super Custom label', subLabel: 'With annotation', radius: 20},\n            //     {angle: 5, radius: 5, label: 'Alt Label'}, {angle: 3, radius: 14}, \n            //     {angle: 5, radius: 12, subLabel: 'Sub Label only', className: 'custom-class'} ]}\n            data={data.reduce((accumulator, currentValue) => accumulator.concat({ 'angle': currentValue/4200}), [])}\n            width={300}\n            height={300} /> \n      </div>\n    );\n  }\n}\n\nexport default Chart_Constructor;"]},"metadata":{},"sourceType":"module"}