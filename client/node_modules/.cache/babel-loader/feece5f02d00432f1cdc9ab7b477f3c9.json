{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/spotify_previewer.js\";\nimport React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport * as $ from \"jquery\";\nimport { URL, URLSearchParams } from 'url'; // https://medium.com/@jonnykalambay/now-playing-using-spotifys-awesome-api-with-react-7db8173a7b13?\n\nconst spotifyWebApi = new Spotify();\n\nclass Spotify_Previewer extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      top_artists: [],\n      access_token: '',\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        image: ''\n      }\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n      this.setState({\n        access_token: params.access_token\n      });\n    }\n  }\n\n  analyseData(data) {\n    // console.log(data);\n    console.log(data.items);\n    let total = data.items.reduce((accumulator, currentValue) => accumulator + currentValue.popularity, 0);\n    let artists = data.items.reduce((accumulator, currentValue) => accumulator.concat(currentValue.name), []);\n    console.log(total / 50);\n    console.log(artists);\n    this.setState({\n      artists\n    });\n  } // getNowPlaying() {\n  //     spotifyWebApi.getMyCurrentPlaybackState ()\n  //     .then((response) => {\n  //         this.setState({\n  //             name: response.item.name,\n  //             image: response.item.album.images[0].url\n  //         })\n  //         console.log(this.state.name);\n  //     }) \n  // }\n\n\n  getTopArtists() {\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/top/artists?time_range=long_term&limit=50&offset=0\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.getHashParams().access_token);\n      },\n      success: data => {\n        this.analyseData(data);\n      }\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.loggedIn) {\n      this.getTopArtists();\n    } // this.forceUpdate();\n\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"How Similar Are Our Music Tastes?\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"This is super important in order to ensure..\"), !this.state.loggedIn ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:5000/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"'Do Something with Spotify'\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.name), React.createElement(\"img\", {\n      src: this.state.image,\n      alt: \"Album Image\",\n      height: \"auto\",\n      width: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Spotify_Previewer;","map":{"version":3,"sources":["/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/spotify_previewer.js"],"names":["React","Component","Spotify","$","URL","URLSearchParams","spotifyWebApi","Spotify_Previewer","constructor","params","getHashParams","state","top_artists","access_token","loggedIn","nowPlaying","name","image","setAccessToken","setState","analyseData","data","console","log","items","total","reduce","accumulator","currentValue","popularity","artists","concat","getTopArtists","ajax","url","type","beforeSend","xhr","setRequestHeader","success","componentDidMount","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport * as $ from \"jquery\";\nimport { URL, URLSearchParams } from 'url';\n// https://medium.com/@jonnykalambay/now-playing-using-spotifys-awesome-api-with-react-7db8173a7b13?\n\nconst spotifyWebApi = new Spotify();\n\nclass Spotify_Previewer extends Component {\n    constructor(){\n        super();\n        const params = this.getHashParams()\n        this.state = {\n            top_artists: [],\n            access_token: '',\n            loggedIn: params.access_token ? true : false,\n            nowPlaying: {\n                name: 'Not Checked',\n                image: ''\n            },\n        }\n        if (params.access_token) {\n            spotifyWebApi.setAccessToken(params.access_token);\n            this.setState(({\n                access_token: params.access_token\n            }));\n        }\n    }\n    analyseData(data) {\n        // console.log(data);\n        console.log(data.items)\n        let total = data.items.reduce((accumulator, currentValue) => accumulator + currentValue.popularity, 0)\n        let artists = data.items.reduce(( accumulator, currentValue) => accumulator.concat(currentValue.name), [])\n        console.log(total/50);\n        console.log(artists);\n        this.setState({artists});\n    }\n    // getNowPlaying() {\n    //     spotifyWebApi.getMyCurrentPlaybackState ()\n    //     .then((response) => {\n    //         this.setState({\n    //             name: response.item.name,\n    //             image: response.item.album.images[0].url\n    //         })\n    //         console.log(this.state.name);\n    //     }) \n    // }\n    getTopArtists() {\n        $.ajax({\n            url: \"https://api.spotify.com/v1/me/top/artists?time_range=long_term&limit=50&offset=0\",\n            type: \"GET\",\n            beforeSend: (xhr) => {\n              xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.getHashParams().access_token);\n            },\n            success: (data) => {\n              this.analyseData(data);\n            }\n        });\n    }\n    componentDidMount(){\n        if(this.state.loggedIn) {\n            this.getTopArtists();\n        }\n        // this.forceUpdate();\n        \n    }\n   \n    getHashParams() {\n        var hashParams = {};\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        while ( e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        }\n        return hashParams;\n    }\n\n    render() {\n            return (\n                <div>\n                    <h1>How Similar Are Our Music Tastes?</h1>\n                    <h3>This is super important in order to ensure..</h3>\n                {!this.state.loggedIn ? (\n                <div>\n                    <a href='http://localhost:5000/login'>\n                        <button>'Do Something with Spotify'</button>\n                    </a>\n                </div>\n                ) : (\n                <div>\n                    <h3>{this.state.name}</h3>\n                    <img src={this.state.image} alt='Album Image' height='auto' width='auto'/>\n                </div>\n                )\n                } \n                </div>\n            );\n    }\n}\n\nexport default Spotify_Previewer;"]},"metadata":{},"sourceType":"module"}