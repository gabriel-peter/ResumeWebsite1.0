{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/spotify_previewer.js\";\nimport React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js'; // import './interships.css';\n\nconst spotifyWebApi = new Spotify();\n\nclass Spotify_Previewer extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        image: ''\n      }\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n\n    this.toggleVisibility = this.toggleVisibility.bind(this);\n  }\n\n  toggleVisibility() {\n    this.setState(state => ({\n      visibility: !state.visibility\n    }));\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        name: response.item.name,\n        image: response.item.album.images[0].url\n      });\n      console.log(this.state.name);\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.loggedIn) {\n      this.getNowPlaying();\n    }\n\n    this.forceUpdate();\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, !this.state.loggedIn ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:5000/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"'Do Something with Spotify'\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.name), React.createElement(\"img\", {\n      src: this.state.image,\n      alt: \"Album Image\",\n      height: \"auto\",\n      width: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Spotify_Previewer;","map":{"version":3,"sources":["/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_previewer/spotify_previewer.js"],"names":["React","Component","Spotify","spotifyWebApi","Spotify_Previewer","constructor","params","getHashParams","state","loggedIn","access_token","nowPlaying","name","image","setAccessToken","toggleVisibility","bind","setState","visibility","getNowPlaying","getMyCurrentPlaybackState","then","response","item","album","images","url","console","log","componentDidMount","forceUpdate","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\n// import './interships.css';\n\nconst spotifyWebApi = new Spotify();\n\nclass Spotify_Previewer extends Component {\n    constructor(){\n        super();\n        const params = this.getHashParams()\n        this.state = {\n            loggedIn: params.access_token ? true : false,\n            nowPlaying: {\n                name: 'Not Checked',\n                image: ''\n            },\n        }\n        if (params.access_token) {\n            spotifyWebApi.setAccessToken(params.access_token);\n        }\n        this.toggleVisibility = this.toggleVisibility.bind(this);\n    }\n    toggleVisibility() {\n        this.setState(state => ({\n        visibility: !state.visibility,\n    }));\n    }\n    getNowPlaying() {\n        spotifyWebApi.getMyCurrentPlaybackState ()\n        .then((response) => {\n            this.setState({\n                name: response.item.name,\n                image: response.item.album.images[0].url\n            })\n            console.log(this.state.name);\n        })\n        \n    }\n\n    componentDidMount(){\n        if(this.state.loggedIn) {\n            this.getNowPlaying();\n        }\n        this.forceUpdate();\n    }\n\n    getHashParams() {\n        var hashParams = {};\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        while ( e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        }\n        return hashParams;\n    }\n\n    render() {\n            return (\n                <div>\n                {!this.state.loggedIn ? (\n                <div>\n                    <a href='http://localhost:5000/login'>\n                        <button>'Do Something with Spotify'</button>\n                    </a>\n                </div>\n                ) : (\n                <div>\n                    <h3>{this.state.name}</h3>\n                    <img src={this.state.image} alt='Album Image' height='auto' width='auto'/>\n                </div>\n                )\n                } \n                </div>\n            );\n    }\n}\n\nexport default Spotify_Previewer;"]},"metadata":{},"sourceType":"module"}