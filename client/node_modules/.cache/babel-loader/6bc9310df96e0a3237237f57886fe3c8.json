{"ast":null,"code":"import _defineProperty from \"/Users/gabrielpeter/PersonalWebsite1.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_comparer/spotify_previewer/genre_analysis.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { VerticalBarSeries, XYPlot, LabelSeries } from 'react-vis';\nimport './graph_styling.css';\n\nclass Genre_Analysis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: null // artistsWithFocus: props.top_5_artists_images\n\n    };\n  }\n\n  render() {\n    const index = this.state.index;\n    const data = this.props.genreData;\n    console.log(data);\n    const dataWithColor = data.map((d, i) => _objectSpread({}, d, {\n      color: Number(i !== index)\n    })); // const artistsWithFocus = this.props.top_5_artists_images.map((d, i) => ({...d, highlight: i === index}));\n\n    const labelData = data.map((d, idx) => ({\n      x: d.x,\n      y: d.y\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(XYPlot, {\n      xType: \"ordinal\",\n      width: 300,\n      height: 300 // https://codesandbox.io/s/bar-series-that-change-colors-on-mouseover-d9zh8\n      //   onMouseLeave={() => this.setState({ index: null })}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(VerticalBarSeries, {\n      data: data,\n      animation: {\n        damping: 9,\n        stiffness: 300\n      } // onNearestX={(d, { index }) => this.setState({ index })}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Genre_Analysis;","map":{"version":3,"sources":["/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_comparer/spotify_previewer/genre_analysis.js"],"names":["React","Component","VerticalBarSeries","XYPlot","LabelSeries","Genre_Analysis","constructor","props","state","index","render","data","genreData","console","log","dataWithColor","map","d","i","color","Number","labelData","idx","x","y","damping","stiffness"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,EAA4BC,MAA5B,EAAoCC,WAApC,QAAuD,WAAvD;AACA,OAAO,qBAAP;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE,CAET;;AAFS,KAAb;AAIH;;AACDC,EAAAA,MAAM,GAAG;AAAA,UACGD,KADH,GACa,KAAKD,KADlB,CACGC,KADH;AAEL,UAAME,IAAI,GAAG,KAAKJ,KAAL,CAAWK,SAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAMI,aAAa,GAAGJ,IAAI,CAACK,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,uBAAeD,CAAf;AAAkBE,MAAAA,KAAK,EAAEC,MAAM,CAACF,CAAC,KAAKT,KAAP;AAA/B,MAAT,CAAtB,CAJK,CAKL;;AACA,UAAMY,SAAS,GAAGV,IAAI,CAACK,GAAL,CAAS,CAACC,CAAD,EAAIK,GAAJ,MAAa;AACpCC,MAAAA,CAAC,EAAEN,CAAC,CAACM,CAD+B;AAEpCC,MAAAA,CAAC,EAAEP,CAAC,CAACO;AAF+B,KAAb,CAAT,CAAlB;AAIA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACN,MAAA,KAAK,EAAC,SADA;AAEN,MAAA,KAAK,EAAE,GAFD;AAGN,MAAA,MAAM,EAAE,GAHF,CAIN;AACF;AALQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAON,oBAAC,iBAAD;AACE,MAAA,IAAI,EAAEb,IADR;AAEE,MAAA,SAAS,EAAE;AAACc,QAAAA,OAAO,EAAE,CAAV;AAAaC,QAAAA,SAAS,EAAE;AAAxB,OAFb,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPM,CADJ,CADJ;AAqBH;;AAvCkC;;AA0CvC,eAAerB,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { VerticalBarSeries, XYPlot, LabelSeries } from 'react-vis';\nimport './graph_styling.css'\n\nclass Genre_Analysis extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            index: null,\n            // artistsWithFocus: props.top_5_artists_images\n        }\n    }\n    render() {\n        const { index } = this.state;\n        const data = this.props.genreData;\n        console.log(data)\n        const dataWithColor = data.map((d, i) => ({...d, color: Number(i !== index)}));\n        // const artistsWithFocus = this.props.top_5_artists_images.map((d, i) => ({...d, highlight: i === index}));\n        const labelData = data.map((d, idx) => ({\n            x: d.x,\n            y: d.y\n        }));\n        return (\n            <div>\n                <XYPlot\n          xType=\"ordinal\"\n          width={300}\n          height={300}\n          // https://codesandbox.io/s/bar-series-that-change-colors-on-mouseover-d9zh8\n        //   onMouseLeave={() => this.setState({ index: null })}\n        >\n          <VerticalBarSeries\n            data={data}    \n            animation={{damping: 9, stiffness: 300}}    \n            // onNearestX={(d, { index }) => this.setState({ index })}\n          />\n          {/* <LabelSeries \n              data={labelData}\n              allowOffsetToBeReversed\n              getLabel={d => d.y}/> */}\n        </XYPlot>\n            </div>\n        );\n    }\n}\n\nexport default Genre_Analysis;"]},"metadata":{},"sourceType":"module"}