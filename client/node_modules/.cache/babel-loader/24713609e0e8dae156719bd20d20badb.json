{"ast":null,"code":"import _defineProperty from \"/Users/gabrielpeter/PersonalWebsite1.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_comparer/chart_constructor.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { XYPlot, VerticalGridLines, XAxis, VerticalBarSeries, LabelSeries, RadialChart, HorizontalBarSeries, HorizontalGridLines, YAxis } from 'react-vis';\nimport './graph_styling.css'; // http://uber.github.io/react-vis/documentation\n\nclass Chart_Constructor extends Component {\n  constructor(props) {\n    super(props);\n    const index = 0;\n    this.state = {\n      index: index,\n      index2: index,\n      artistsWithFocus: [],\n      owner: props.owner\n    };\n  } // componentDidMount() {\n  //   this.setState({artistsWithFocus: this.props.top_5_artists_images.map((d, i) => ({...d, highlight: 0}))})\n  // }\n\n\n  render() {\n    const data1 = this.props.data1;\n    const data2 = this.props.data2;\n    const genres = this.props.genres;\n    const chart_dimension = 300;\n    const index = this.state.index;\n    var genre_max = {\n      'x': 0,\n      'y': 'Undef'\n    };\n    genres.forEach(element => {\n      if (element['x'] > genre_max['x']) {\n        genre_max = element;\n      }\n    });\n    const dataWithColor = data2.map((d, i) => _objectSpread({}, d, {\n      color: Number(i !== index)\n    }));\n    const artistsWithFocus = this.props.top_5_artists_images.map((d, i) => _objectSpread({}, d, {\n      highlight: i === index\n    }));\n    const labelData = data2.map((d, idx) => ({\n      x: d.x,\n      y: d.y\n    }));\n    const index2 = this.state.index2;\n    const dataWithColor2 = genres.map((d, i) => _objectSpread({}, d, {\n      color: Number(i !== index2) + 1\n    }));\n    return React.createElement(\"div\", {\n      className: \"my-graphs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top-5-artists_w_graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-and-directions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(XYPlot, {\n      xType: \"ordinal\",\n      width: chart_dimension,\n      height: chart_dimension // https://codesandbox.io/s/bar-series-that-change-colors-on-mouseover-d9zh8\n      ,\n      onMouseLeave: () => this.setState({\n        index: null\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(VerticalBarSeries, {\n      data: dataWithColor,\n      animation: {\n        damping: 9,\n        stiffness: 300\n      },\n      onNearestX: (d, {\n        index\n      }) => this.setState({\n        index\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(LabelSeries, {\n      data: labelData,\n      allowOffsetToBeReversed: true,\n      getLabel: d => d.y,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Hover over the graph to show \", this.state.owner === 'you' ? 'your' : 'my', \" top 5 artists' popularity!\")), React.createElement(\"div\", {\n      className: \"my-top-artists\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, artistsWithFocus.map(artist => React.createElement(\"div\", {\n      key: artist.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, !artist.highlight === true ? React.createElement(\"div\", {\n      className: 'an-artist',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: artist.uri,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"artist-image\",\n      src: artist.images[0].url,\n      alt: '',\n      height: 200,\n      width: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: \"highlighted-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, artist.name))))), React.createElement(\"div\", {\n      className: \"secondary-analysis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"popularity-analysis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"big-number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Popularity Analysis\"), React.createElement(RadialChart, {\n      data: data1,\n      width: chart_dimension,\n      height: chart_dimension,\n      animation: {\n        damping: 9,\n        stiffness: 300\n      },\n      showLabels: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"average-popularity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.owner === 'you' ? 'Your' : 'My', \" favorite artists averaged around:\"), React.createElement(\"div\", {\n      className: \"big-number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.props.average_artist_rank, \"/100\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"in their overall popularity score!\"))), React.createElement(\"div\", {\n      className: \"genre-analysis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"big-number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Genre Analysis\"), React.createElement(XYPlot, {\n      stackBy: \"x\",\n      yType: \"ordinal\",\n      margin: {\n        left: 100\n      },\n      width: chart_dimension,\n      height: chart_dimension // https://codesandbox.io/s/bar-series-that-change-colors-on-mouseover-d9zh8\n      ,\n      onMouseLeave: () => this.setState({\n        index2: null\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(HorizontalBarSeries, {\n      data: dataWithColor2,\n      animation: {\n        damping: 9,\n        stiffness: 300\n      },\n      onNearestX: (d, {\n        index2\n      }) => this.setState({\n        index2\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(VerticalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(HorizontalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.owner === 'you' ? 'Your' : 'My', \" music primarly consists of:\", React.createElement(\"div\", {\n      className: \"big-number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, genre_max['y'])))));\n  }\n\n}\n\nexport default Chart_Constructor;","map":{"version":3,"sources":["/Users/gabrielpeter/PersonalWebsite1.0/client/src/components/spotify_comparer/chart_constructor.js"],"names":["React","Component","XYPlot","VerticalGridLines","XAxis","VerticalBarSeries","LabelSeries","RadialChart","HorizontalBarSeries","HorizontalGridLines","YAxis","Chart_Constructor","constructor","props","index","state","index2","artistsWithFocus","owner","render","data1","data2","genres","chart_dimension","genre_max","forEach","element","dataWithColor","map","d","i","color","Number","top_5_artists_images","highlight","labelData","idx","x","y","dataWithColor2","setState","damping","stiffness","artist","name","uri","images","url","average_artist_rank","left"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {XYPlot, VerticalGridLines, XAxis, VerticalBarSeries, LabelSeries, RadialChart, HorizontalBarSeries, HorizontalGridLines, YAxis} from 'react-vis';\nimport './graph_styling.css';\n// http://uber.github.io/react-vis/documentation\n\nclass Chart_Constructor extends Component {\n    constructor(props) {\n      super(props)\n      const index = 0;\n      this.state= {\n        index: index,\n        index2: index,\n        artistsWithFocus: [],\n        owner: props.owner,\n      }\n    }\n  // componentDidMount() {\n  //   this.setState({artistsWithFocus: this.props.top_5_artists_images.map((d, i) => ({...d, highlight: 0}))})\n  // }\n  render() {\n      const data1 = this.props.data1\n      const data2 = this.props.data2\n      const genres = this.props.genres\n      const chart_dimension = 300;\n      const { index } = this.state;\n      var genre_max = {'x': 0, 'y': 'Undef'};\n      genres.forEach(element => {\n        if(element['x'] > genre_max['x']) {\n          genre_max = element;\n        }\n      })\n      const dataWithColor = data2.map((d, i) => ({...d, color: Number(i !== index)}));\n      const artistsWithFocus = this.props.top_5_artists_images.map((d, i) => ({...d, highlight: i === index}));\n      const labelData = data2.map((d, idx) => ({\n        x: d.x,\n        y: d.y\n      }));\n      const { index2 } = this.state;\n      const dataWithColor2 = genres.map((d, i) => ({...d, color: (Number(i !== index2)+1)}));\n    return (\n      <div className='my-graphs'>\n        <div className='top-5-artists_w_graph'>\n          <div className='graph-and-directions'>\n        <XYPlot\n          xType=\"ordinal\"\n          width={chart_dimension}\n          height={chart_dimension}\n          // https://codesandbox.io/s/bar-series-that-change-colors-on-mouseover-d9zh8\n          onMouseLeave={() => this.setState({ index: null })}\n        >\n          <VerticalBarSeries\n            data={dataWithColor}    \n            animation={{damping: 9, stiffness: 300}}    \n            onNearestX={(d, { index }) => this.setState({ index })}\n          />\n          <LabelSeries \n              data={labelData}\n              allowOffsetToBeReversed\n              getLabel={d => d.y}/>\n        </XYPlot>\n        <div>Hover over the graph to show {this.state.owner === 'you' ? ('your'):('my')} top 5 artists' popularity!</div>\n        </div>\n        <div className='my-top-artists'>\n          {artistsWithFocus.map((artist) =>\n            <div key={artist.name}>\n              {!artist.highlight===true ? (\n                <div className={'an-artist'}>\n                  <a href={artist.uri}>\n                    <img className='artist-image' src={artist.images[0].url} alt={''} height={200} width={200}/>\n                  </a>\n                </div>) : (\n            <div className='highlighted-title'>{artist.name}</div>)}\n          </div>\n          )}\n        </div>\n        </div>\n        <div className='secondary-analysis'>\n        <div className='popularity-analysis'>\n        <div className='big-number'>Popularity Analysis</div>\n        <RadialChart\n            data={data1}\n            width={chart_dimension}\n            height={chart_dimension}\n            animation={{damping: 9, stiffness: 300}}\n            showLabels={true}\n            /> \n          <div className='average-popularity'>\n            <div>{this.state.owner === 'you' ? ('Your'):('My')} favorite artists averaged around:</div>\n            <div className='big-number'>{this.props.average_artist_rank}/100</div>\n            <div>in their overall popularity score!</div>\n          </div>\n        \n        </div>\n        <div className='genre-analysis'>\n        <div className='big-number'>Genre Analysis</div>\n        <XYPlot\n          stackBy=\"x\"\n          yType=\"ordinal\"\n          margin={{left: 100}} \n          width={chart_dimension}\n          height={chart_dimension}\n          // https://codesandbox.io/s/bar-series-that-change-colors-on-mouseover-d9zh8\n          onMouseLeave={() => this.setState({ index2: null })}\n        >\n          <YAxis/>\n          <XAxis />\n          <HorizontalBarSeries\n            data={dataWithColor2} \n            animation={{damping: 9, stiffness: 300}}    \n            onNearestX={(d, { index2 }) => this.setState({ index2 })}\n          />\n          <VerticalGridLines />\n          <HorizontalGridLines />\n        </XYPlot>\n            <div>{this.state.owner === 'you' ? ('Your'):('My')} music primarly consists of:\n              <div className='big-number'>{genre_max['y']}</div>\n              </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Chart_Constructor;"]},"metadata":{},"sourceType":"module"}